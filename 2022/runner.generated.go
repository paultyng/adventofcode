// Code generated by go generate - DO NOT EDIT.

package main

import "fmt"

func runPartFactory(currentDay int, part string) runPart {
	switch fmt.Sprintf("Day%dPart%s", currentDay, part) {
	default:
		panic(fmt.Sprintf("day %d part %s not implemented", currentDay, part))
	case "Day1Part1":
		return runDay1Part1
	case "Day1Part2":
		return runDay1Part2
	case "Day2Part1":
		return runDay2Part1
	case "Day2Part2":
		return runDay2Part2
	case "Day3Part1":
		return runDay3Part1
	case "Day3Part2":
		return runDay3Part2
	case "Day4Part1":
		return runDay4Part1
	case "Day4Part2":
		return runDay4Part2
	case "Day5Part1":
		return runDay5Part1
	case "Day5Part2":
		return runDay5Part2
	case "Day6Part1":
		return runDay6Part1
	case "Day6Part2":
		return runDay6Part2
	case "Day7Part1":
		return runDay7Part1
	case "Day7Part2":
		return runDay7Part2
	case "Day8Part1":
		return runDay8Part1
	case "Day8Part2":
		return runDay8Part2
	case "Day9Part1":
		return runDay9Part1
	case "Day9Part2":
		return runDay9Part2
	case "Day10Part1":
		return runDay10Part1
	case "Day10Part2":
		return runDay10Part2
	case "Day11Part1":
		return runDay11Part1
	case "Day11Part2":
		return runDay11Part2
	case "Day12Part1":
		return runDay12Part1
	case "Day12Part2":
		return runDay12Part2
	case "Day13Part1":
		return runDay13Part1
	case "Day13Part2":
		return runDay13Part2
	case "Day14Part1":
		return runDay14Part1
	case "Day14Part2":
		return runDay14Part2
	case "Day15Part1":
		return runDay15Part1
	case "Day15Part2":
		return runDay15Part2
	case "Day16Part1":
		return runDay16Part1
	case "Day16Part2":
		return runDay16Part2
	case "Day17Part1":
		return runDay17Part1
	case "Day17Part2":
		return runDay17Part2
	case "Day18Part1":
		return runDay18Part1
	case "Day18Part2":
		return runDay18Part2
	case "Day19Part1":
		return runDay19Part1
	case "Day19Part2":
		return runDay19Part2
	case "Day20Part1":
		return runDay20Part1
	case "Day20Part2":
		return runDay20Part2
	case "Day21Part1":
		return runDay21Part1
	case "Day21Part2":
		return runDay21Part2
	case "Day22Part1":
		return runDay22Part1
	case "Day22Part2":
		return runDay22Part2
	case "Day23Part1":
		return runDay23Part1
	case "Day23Part2":
		return runDay23Part2
	case "Day24Part1":
		return runDay24Part1
	case "Day24Part2":
		return runDay24Part2
	case "Day25Part1":
		return runDay25Part1
	case "Day25Part2":
		return runDay25Part2
	}
}
